[{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['51','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.456Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['60','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.478Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['68','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.578Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['60','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.818Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['51','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.850Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['46','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:51.930Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['38','0','76','0','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.129Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['29','0','67','39','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.379Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['21','0','59','38','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.441Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['13','0','51','32','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.795Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['4','0','42','41','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.828Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','37','52','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:53.912Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:55.840Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py',''],time:'2024-09-06T19:48:55.863Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','143','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py',"import matplotlib.pyplot as plt\nimport pandas as pd\nimport os\n\n# Define the textures for each heuristic\ntexture_scheme = {\n    'Heuristic 1 Only': 'solid',     # Code Length\n    'Heuristic 2 Only': 'dashed',    # Code Similarity\n    'Heuristic 3 Only': 'dotted',   # Same Containment\n    'All Heuristics': 'dashdot'         # Combined\n}\ncolor_scheme = {\n# Define the colors for each p-value\n    'p=0': 'blue',\n    'p=0.5': 'green',\n    'p=1': 'orange'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}\n\naccuracy_results_apache_lucene = {}\nrule_percentage_results__apache_lucene = {}\nconciseness_results__apache_lucene = {}\n\naccuracy_results_alibaba_nacos = {}\nrule_percentage_results__alibaba_nacos = {}\nconciseness_results__alibaba_nacos = {}\n\naccuracy_results_apache_dubbo = {}\nrule_percentage_results__apache_dubbo = {}\nconciseness_results__apache_dubbo = {}\n\naccuracy_results_presto = {}\nrule_percentage_results__presto = {}\nconciseness_results__presto = {}\n\n\n# Load the results from the CSV files\nfor filename in os.listdir('data'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/{filename}')\n\n        # columns Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            # if file name contains alibaba_nacos\n            if 'alibaba_nacos' in filename:\n                if scenario not in accuracy_results_alibaba_nacos:\n                    accuracy_results_alibaba_nacos[scenario] = {}\n                    rule_percentage_results__alibaba_nacos[scenario] = {}\n                    conciseness_results__alibaba_nacos[scenario] = {}\n\n                if probability not in accuracy_results_alibaba_nacos[scenario]:\n                    accuracy_results_alibaba_nacos[scenario][probability] = []\n                    rule_percentage_results__alibaba_nacos[scenario][probability] = []\n                    conciseness_results__alibaba_nacos[scenario][probability] = []\n\n                accuracy_results_alibaba_nacos[scenario][probability].append(accuracy)\n                rule_percentage_results__alibaba_nacos[scenario][probability].append(rule_percentage)\n                conciseness_results__alibaba_nacos[scenario][probability].append(conciseness)\n            \n            # if file name contains apache_dubbo\n            if 'apache_dubbo' in filename:\n                if scenario not in accuracy_results_apache_dubbo:\n                    accuracy_results_apache_dubbo[scenario] = {}\n                    rule_percentage_results__apache_dubbo[scenario] = {}\n                    conciseness_results__apache_dubbo[scenario] = {}\n\n                if probability not in accuracy_results_apache_dubbo[scenario]:\n                    accuracy_results_apache_dubbo[scenario][probability] = []\n                    rule_percentage_results__apache_dubbo[scenario][probability] = []\n                    conciseness_results__apache_dubbo[scenario][probability] = []\n\n                accuracy_results_apache_dubbo[scenario][probability].append(accuracy)\n                rule_percentage_results__apache_dubbo[scenario][probability].append(rule_percentage)\n                conciseness_results__apache_dubbo[scenario][probability].append(conciseness)\n            \n            # if file name contains apache_lucene\n            if 'apache_lucene' in filename:\n                if scenario not in accuracy_results_apache_lucene:\n                    accuracy_results_apache_lucene[scenario] = {}\n                    rule_percentage_results__apache_lucene[scenario] = {}\n                    conciseness_results__apache_lucene[scenario] = {}\n\n                if probability not in accuracy_results_apache_lucene[scenario]:\n                    accuracy_results_apache_lucene[scenario][probability] = []\n                    rule_percentage_results__apache_lucene[scenario][probability] = []\n                    conciseness_results__apache_lucene[scenario][probability] = []\n\n                accuracy_results_apache_lucene[scenario][probability].append(accuracy)\n                rule_percentage_results__apache_lucene[scenario][probability].append(rule_percentage)\n                conciseness_results__apache_lucene[scenario][probability].append(conciseness)\n\n            # if file name contains presto\n            if 'presto' in filename:\n                if scenario not in accuracy_results_presto:\n                    accuracy_results_presto[scenario] = {}\n                    rule_percentage_results__presto[scenario] = {}\n                    conciseness_results__presto[scenario] = {}\n\n                if probability not in accuracy_results_presto[scenario]:\n                    accuracy_results_presto[scenario][probability] = []\n                    rule_percentage_results__presto[scenario][probability] = []\n                    conciseness_results__presto[scenario][probability] = []\n\n                accuracy_results_presto[scenario][probability].append(accuracy)\n                rule_percentage_results__presto[scenario][probability].append(rule_percentage)\n                conciseness_results__presto[scenario][probability].append(conciseness)\n\nprint(\"Alibaba Nacos\")\nprint(accuracy_results_alibaba_nacos)\nprint(rule_percentage_results__alibaba_nacos)\nprint(conciseness_results__alibaba_nacos)\n\nprint(\"Apache Dubbo\")\nprint(accuracy_results_apache_dubbo)\nprint(rule_percentage_results__apache_dubbo)\nprint(conciseness_results__apache_dubbo)\n\nprint(\"Apache Lucene\")\nprint(accuracy_results_apache_lucene)\nprint(rule_percentage_results__apache_lucene)\nprint(conciseness_results__apache_lucene)\n\nprint(\"Presto\")\nprint(accuracy_results_presto)\nprint(rule_percentage_results__presto)\nprint(conciseness_results__presto)\n\n\n# plot\n"],time:'2024-09-06T19:48:55.871Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['105','0','143','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py'],time:'2024-09-06T19:48:55.871Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['1','0','143','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py',"\n# Define the color scheme for each heuristic\ncolor_scheme = {\n    'Heuristic 1 Only': 'blue',     # Code Length\n    'Heuristic 2 Only': 'green',    # Code Similarity\n    'Heuristic 3 Only': 'orange',   # Same Containment\n    'All Heuristics': 'red'         # Combined\n}\n\n# Define the textures for each p-value\ntexture_scheme = {\n    'p=0': 'solid',\n    'p=0.5': 'dashed',\n    'p=1': 'dotted'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}\n\n# Plot the accuracy over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in accuracy_results.items():\n    for p_value, accuracy_list in p_results.items():\n        plt.plot(\n            range(len(accuracy_list)), \n            accuracy_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Accuracy (%)')\nplt.title('Accuracy over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot the percentage of rules over threshold over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in rule_percentage_results.items():\n    for p_value, rule_percentage_list in p_results.items():\n        plt.plot(\n            range(len(rule_percentage_list)), \n            rule_percentage_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Percentage of Rules Over Threshold (%)')\nplt.title('Percentage of Rules overlapping with the Ground Truth over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot the conciseness over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in conciseness_results.items():\n    for p_value, conciseness_list in p_results.items():\n        plt.plot(\n            range(len(conciseness_list)), \n            conciseness_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Conciseness')\nplt.title('Conciseness over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n"],time:'2024-09-06T19:48:58.628Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','84','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py',"import matplotlib.pyplot as plt\n\n# Define the color scheme for each heuristic\ncolor_scheme = {\n    'Heuristic 1 Only': 'blue',     # Code Length\n    'Heuristic 2 Only': 'green',    # Code Similarity\n    'Heuristic 3 Only': 'orange',   # Same Containment\n    'All Heuristics': 'red'         # Combined\n}\n\n# Define the textures for each p-value\ntexture_scheme = {\n    'p=0': 'solid',\n    'p=0.5': 'dashed',\n    'p=1': 'dotted'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}\n\n# Plot the accuracy over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in accuracy_results.items():\n    for p_value, accuracy_list in p_results.items():\n        plt.plot(\n            range(len(accuracy_list)), \n            accuracy_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Accuracy (%)')\nplt.title('Accuracy over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot the percentage of rules over threshold over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in rule_percentage_results.items():\n    for p_value, rule_percentage_list in p_results.items():\n        plt.plot(\n            range(len(rule_percentage_list)), \n            rule_percentage_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Percentage of Rules Over Threshold (%)')\nplt.title('Percentage of Rules overlapping with the Ground Truth over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n\n# Plot the conciseness over time for all scenarios and probabilities\nplt.figure(figsize=(12, 6))\nfor scenario_name, p_results in conciseness_results.items():\n    for p_value, conciseness_list in p_results.items():\n        plt.plot(\n            range(len(conciseness_list)), \n            conciseness_list, \n            label=f'{heuristic_names[scenario_name]} - {p_value}', \n            color=color_scheme[scenario_name], \n            linestyle=texture_scheme[p_value],\n            marker='o'\n        )\n\nplt.xlabel('Iteration Number')\nplt.ylabel('Conciseness')\nplt.title('Conciseness over Iterations for Different Scenarios and Probabilities')\nplt.legend()\nplt.grid(True)\nplt.show()\n"],time:'2024-09-06T19:48:58.637Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['84','0','84','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py'],time:'2024-09-06T19:48:58.637Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.py'],time:'2024-09-06T19:48:58.654Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv',''],time:'2024-09-06T19:48:58.676Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['26','5','26','33','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv','stic 1 Only,p=0.5,0,4.0,0.0,'],time:'2024-09-06T19:48:58.679Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','37','52','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:48:58.680Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/data/apache_lucene.csv'],time:'2024-09-06T19:49:04.007Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:49:04.059Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','0','0','0','git/scm0/input','p'],time:'2024-09-06T19:49:09.897Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','1','0','1','git/scm0/input','l'],time:'2024-09-06T19:49:10.036Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','2','0','2','git/scm0/input','o'],time:'2024-09-06T19:49:10.211Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','3','0','3','git/scm0/input','t'],time:'2024-09-06T19:49:10.276Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','4','0','4','git/scm0/input','s'],time:'2024-09-06T19:49:10.539Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','0','0','5','git/scm0/input',''],time:'2024-09-06T19:49:12.210Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','18','34','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','print("Alibaba Nacos")\nprint(accuracy_results_alibaba_nacos)\nprint(rule_percentage_results__alibaba_nacos)\nprint(conciseness_results__alibaba_nacos)\n\nprint("Apache Dubbo")\nprint(accuracy_results_apache_dubbo)\nprint(rule_percentage_results__apache_dubbo)\nprint(conciseness_results__apache_dubbo)\n\nprint("Apache Lucene")\nprint(accuracy_results_apache_lucene)\nprint(rule_percentage_results__apache_lucene)\nprint(conciseness_results__apache_lucene)\n\nprint("Presto")\nprint(accuracy_results_presto)\nprint(rule_percentage_results__presto)\nprint(conciseness_results__presto)'],time:'2024-09-06T19:54:40.860Z'}]