[{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['164','30','164','30','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T21:34:28.995Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','177','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# 1x3 plots\n# Use the average data in data/avg/alibaba_nacos_h=1_averaged_results.csv, alibaba_nacos_h=2_averaged_results.csv, alibaba_nacos_h=3_averaged_results.csv, alibaba_nacos_h=4_averaged_results.csv\n# Filter the data only for p=0.5\n# All heuristics should be combined in each of the three plots\n# Plot the data for only alibaba nacos, because that is the only dataset that has been averaged\n# The x-axis should be the iteration number\n# The y-axis should be the averaged values of accuracy, rule percentage, and conciseness at that iteration\n\n# Load the averaged results from the CSV files\naveraged_results_h_1 = {}\naveraged_results_h_2 = {}\naveraged_results_h_3 = {}\naveraged_results_h_4 = {}\n\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if 'h=1' in filename:\n                if scenario not in averaged_results_h_1:\n                    averaged_results_h_1[scenario] = {}\n                if probability not in averaged_results_h_1[scenario]:\n                    averaged_results_h_1[scenario][probability] = {'Accuracy': [], 'Rule Percentage': [], 'Conciseness': []}\n\n                averaged_results_h_1[scenario][probability]['Accuracy'].append(accuracy)\n                averaged_results_h_1[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                averaged_results_h_1[scenario][probability]['Conciseness'].append(conciseness)\n            elif 'h=2' in filename:\n                if scenario not in averaged_results_h_2:\n                    averaged_results_h_2[scenario] = {}\n                if probability not in averaged_results_h_2[scenario]:\n                    averaged_results_h_2[scenario][probability] = {'Accuracy': [], 'Rule Percentage': [], 'Conciseness': []}\n\n                averaged_results_h_2[scenario][probability]['Accuracy'].append(accuracy)\n                averaged_results_h_2[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                averaged_results_h_2[scenario][probability]['Conciseness'].append(conciseness)\n            elif 'h=3' in filename:\n                if scenario not in averaged_results_h_3:\n                    averaged_results_h_3[scenario] = {}\n                if probability not in averaged_results_h_3[scenario]:\n                    averaged_results_h_3[scenario][probability] = {'Accuracy': [], 'Rule Percentage': [], 'Conciseness': []}\n\n                averaged_results_h_3[scenario][probability]['Accuracy'].append(accuracy)\n                averaged_results_h_3[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                averaged_results_h_3[scenario][probability]['Conciseness'].append(conciseness)\n            elif 'h=4':\n                if scenario not in averaged_results_h_4:\n                    averaged_results_h_4[scenario] = {}\n                if probability not in averaged_results_h_4[scenario]:\n                    averaged_results_h_4[scenario][probability] = {'Accuracy': [], 'Rule Percentage': [], 'Conciseness': []}\n\n                averaged_results_h_4[scenario][probability]['Accuracy'].append(accuracy)\n                averaged_results_h_4[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                averaged_results_h_4[scenario][probability]['Conciseness'].append(conciseness)\n\n# filter the data only for p=0.5\naveraged_results_h_1_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in averaged_results_h_1.items()}\naveraged_results_h_2_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in averaged_results_h_2.items()}\naveraged_results_h_3_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in averaged_results_h_3.items()}\naveraged_results_h_4_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in averaged_results_h_4.items()}\n\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results_h_1_filtered.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_2_filtered.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_3_filtered.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_4_filtered.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in averaged_results_h_1_filtered.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_2_filtered.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_3_filtered.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_4_filtered.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\n# Accuracy\nfor scenario, probabilities in averaged_results_h_1_filtered.items():\n    for probability, values in probabilities.items():\n        axs[2].plot(values['Accuracy'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_2_filtered.items():\n    for probability, values in probabilities.items():\n        axs[2].plot(values['Accuracy'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_3_filtered.items():\n    for probability, values in probabilities.items():\n        axs[2].plot(values['Accuracy'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in averaged_results_h_4_filtered.items():\n    for probability, values in probabilities.items():\n        axs[2].plot(values['Accuracy'], label=f'{scenario} - {probability}')\n\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness', 'Accuracy']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\naxs[2].set_ylabel('Accuracy (%)')\n\naxs[1].set_title('Averaged Results over 10 Runs for Alibaba Nacos (h=1, 2, 3, 4 - p=0.5)', fontsize=16, y=1.05)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n\n# Save the figure as PDF\nfig.savefig('averaged_results.pdf')\n\n# 1x3 plots for all programs at h=4 for all probabilities\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results_h_4.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in averaged_results_h_4.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\n# Accuracy\nfor scenario, probabilities in averaged_results_h_4.items():\n    for probability, values in probabilities.items():\n        axs[2].plot(values['Accuracy'], label=f'{scenario} - {probability}')\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness', 'Accuracy']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\naxs[2].set_ylabel('Accuracy (%)')\n\naxs[1].set_title('Averaged Results over 10 Runs for Alibaba Nacos (h=4 - p=0, 0.5, 1)', fontsize=16, y=1.05)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\nfig.savefig('averaged_results_h=4.pdf')\n"],time:'2024-09-12T21:34:30.830Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['165','30','165','30','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T21:34:38.817Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['160','29','160','29','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T21:34:41.773Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['160','21','160','21','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T21:34:44.073Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['71','0','71','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T21:34:53.955Z'}]