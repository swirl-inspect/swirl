[{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','34','18','34','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:39.813Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','57','20','57','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:45.370Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','52','20','65','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','_probability_'],time:'2024-09-06T19:26:45.543Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','0','21','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"        plt.savefig(f'plots/alibaba_nacos_{scenario}_probability_{probability}.png')\n"],time:'2024-09-06T19:26:45.701Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['20','0','21','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:46.508Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-06T19:26:46.512Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','0','20','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:46.550Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['4','0','195','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','   "execution_count": 8,\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "import matplotlib.pyplot as plt\\n",\n    "import pandas as pd\\n",\n    "import os\\n",\n    "\\n",\n    "# Define the color scheme for each heuristic\\n",\n    "color_scheme = {\\n",\n    "    \'Heuristic 1 Only\': \'solid\',     # Code Length\\n",\n    "    \'Heuristic 2 Only\': \'dashed\',    # Code Similarity\\n",\n    "    \'Heuristic 3 Only\': \'dotted\',   # Same Containment\\n",\n    "    \'All Heuristics\': \'dashdot\'         # Combined\\n",\n    "}\\n",\n    "\\n",\n    "# Define the textures for each p-value\\n",\n    "texture_scheme = {\\n",\n    "    \'p=0\': \'blue\',\\n",\n    "    \'p=0.5\': \'green\',\\n",\n    "    \'p=1\': \'orange\'\\n",\n    "}\\n",\n    "\\n",\n    "# Updated heuristic names\\n",\n    "heuristic_names = {\\n",\n    "    \'Heuristic 1 Only\': \'Code Length\',\\n",\n    "    \'Heuristic 2 Only\': \'Code Similarity\',\\n",\n    "    \'Heuristic 3 Only\': \'Same Containment\',\\n",\n    "    \'All Heuristics\': \'Combined\'\\n",\n    "}"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 9,\n   "metadata": {},\n   "outputs": [],\n   "source": [\n    "accuracy_results_apache_lucene = {}\\n",\n    "rule_percentage_results__apache_lucene = {}\\n",\n    "conciseness_results__apache_lucene = {}\\n",\n    "\\n",\n    "accuracy_results_alibaba_nacos = {}\\n",\n    "rule_percentage_results__alibaba_nacos = {}\\n",\n    "conciseness_results__alibaba_nacos = {}\\n",\n    "\\n",\n    "accuracy_results_apache_dubbo = {}\\n",\n    "rule_percentage_results__apache_dubbo = {}\\n",\n    "conciseness_results__apache_dubbo = {}\\n",\n    "\\n",\n    "accuracy_results_presto = {}\\n",\n    "rule_percentage_results__presto = {}\\n",\n    "conciseness_results__presto = {}\\n",\n    "\\n",\n    "\\n",\n    "# Load the results from the CSV files\\n",\n    "for filename in os.listdir(\'data\'):\\n",\n    "    if filename.endswith(\'.csv\'):\\n",\n    "        df = pd.read_csv(f\'data/{filename}\')\\n",\n    "\\n",\n    "        # columns Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\\n",\n    "        for index, row in df.iterrows():\\n",\n    "            scenario = row[\'Scenario\']\\n",\n    "            probability = row[\'Probability\']\\n",\n    "            iteration = row[\'Iteration\']\\n",\n    "            accuracy = row[\'Accuracy\']\\n",\n    "            rule_percentage = row[\'Rule Percentage\']\\n",\n    "            conciseness = row[\'Conciseness\']\\n",\n    "\\n",\n    "            # if file name contains alibaba_nacos\\n",\n    "            if \'alibaba_nacos\' in filename:\\n",\n    "                if scenario not in accuracy_results_alibaba_nacos:\\n",\n    "                    accuracy_results_alibaba_nacos[scenario] = {}\\n",\n    "                    rule_percentage_results__alibaba_nacos[scenario] = {}\\n",\n    "                    conciseness_results__alibaba_nacos[scenario] = {}\\n",\n    "\\n",\n    "                if probability not in accuracy_results_alibaba_nacos[scenario]:\\n",\n    "                    accuracy_results_alibaba_nacos[scenario][probability] = []\\n",\n    "                    rule_percentage_results__alibaba_nacos[scenario][probability] = []\\n",\n    "                    conciseness_results__alibaba_nacos[scenario][probability] = []\\n",\n    "\\n",\n    "                accuracy_results_alibaba_nacos[scenario][probability].append(accuracy)\\n",\n    "                rule_percentage_results__alibaba_nacos[scenario][probability].append(rule_percentage)\\n",\n    "                conciseness_results__alibaba_nacos[scenario][probability].append(conciseness)\\n",\n    "            \\n",\n    "            # if file name contains apache_dubbo\\n",\n    "            if \'apache_dubbo\' in filename:\\n",\n    "                if scenario not in accuracy_results_apache_dubbo:\\n",\n    "                    accuracy_results_apache_dubbo[scenario] = {}\\n",\n    "                    rule_percentage_results__apache_dubbo[scenario] = {}\\n",\n    "                    conciseness_results__apache_dubbo[scenario] = {}\\n",\n    "\\n",\n    "                if probability not in accuracy_results_apache_dubbo[scenario]:\\n",\n    "                    accuracy_results_apache_dubbo[scenario][probability] = []\\n",\n    "                    rule_percentage_results__apache_dubbo[scenario][probability] = []\\n",\n    "                    conciseness_results__apache_dubbo[scenario][probability] = []\\n",\n    "\\n",\n    "                accuracy_results_apache_dubbo[scenario][probability].append(accuracy)\\n",\n    "                rule_percentage_results__apache_dubbo[scenario][probability].append(rule_percentage)\\n",\n    "                conciseness_results__apache_dubbo[scenario][probability].append(conciseness)\\n",\n    "            \\n",\n    "            # if file name contains apache_lucene\\n",\n    "            if \'apache_lucene\' in filename:\\n",\n    "                if scenario not in accuracy_results_apache_lucene:\\n",\n    "                    accuracy_results_apache_lucene[scenario] = {}\\n",\n    "                    rule_percentage_results__apache_lucene[scenario] = {}\\n",\n    "                    conciseness_results__apache_lucene[scenario] = {}\\n",\n    "\\n",\n    "                if probability not in accuracy_results_apache_lucene[scenario]:\\n",\n    "                    accuracy_results_apache_lucene[scenario][probability] = []\\n",\n    "                    rule_percentage_results__apache_lucene[scenario][probability] = []\\n",\n    "                    conciseness_results__apache_lucene[scenario][probability] = []\\n",\n    "\\n",\n    "                accuracy_results_apache_lucene[scenario][probability].append(accuracy)\\n",\n    "                rule_percentage_results__apache_lucene[scenario][probability].append(rule_percentage)\\n",\n    "                conciseness_results__apache_lucene[scenario][probability].append(conciseness)\\n",\n    "\\n",\n    "            # if file name contains presto\\n",\n    "            if \'presto\' in filename:\\n",\n    "                if scenario not in accuracy_results_presto:\\n",\n    "                    accuracy_results_presto[scenario] = {}\\n",\n    "                    rule_percentage_results__presto[scenario] = {}\\n",\n    "                    conciseness_results__presto[scenario] = {}\\n",\n    "\\n",\n    "                if probability not in accuracy_results_presto[scenario]:\\n",\n    "                    accuracy_results_presto[scenario][probability] = []\\n",\n    "                    rule_percentage_results__presto[scenario][probability] = []\\n",\n    "                    conciseness_results__presto[scenario][probability] = []\\n",\n    "\\n",\n    "                accuracy_results_presto[scenario][probability].append(accuracy)\\n",\n    "                rule_percentage_results__presto[scenario][probability].append(rule_percentage)\\n",\n    "                conciseness_results__presto[scenario][probability].append(conciseness)"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 10,\n   "metadata": {},\n   "outputs": [\n    {\n     "name": "stdout",\n     "output_type": "stream",\n     "text": [\n      "Alibaba Nacos\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 4.0, 8.0, 12.0, 12.0, 12.0, 12.0, 16.0, 20.0, 24.0, 28.000000000000004, 28.000000000000004, 32.0, 32.0, 32.0, 36.0, 36.0, 36.0, 40.0, 40.0, 44.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 4.0, 4.0, 8.0, 12.0, 12.0, 12.0, 12.0, 16.0, 20.0, 24.0, 28.000000000000004, 32.0, 32.0, 32.0, 36.0, 40.0, 44.0, 44.0, 44.0, 48.0], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 8.0, 12.0, 16.0, 20.0, 24.0, 24.0, 28.000000000000004, 28.000000000000004, 52.0, 52.0, 56.00000000000001, 56.00000000000001, 56.00000000000001, 56.00000000000001, 56.00000000000001, 56.00000000000001, 56.00000000000001]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 33.33333333333333, 66.66666666666666, 33.33333333333333, 33.33333333333333, 33.33333333333333, 50.0, 75.0, 75.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 0.0, 33.33333333333333, 33.33333333333333, 33.33333333333333, 33.33333333333333, 50.0, 75.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 0.0, 33.33333333333333, 25.0, 75.0, 75.0, 75.0, 75.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 3.5, 7.0, 7.0, 7.0, 7.5, 5.0, 5.0, 5.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.25, 2.25, 2.25], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 7.0, 7.0, 7.0, 7.0, 5.5, 3.6666666666666665, 3.6666666666666665, 2.0, 2.0, 2.0, 2.0, 2.0, 2.25, 2.25, 2.25, 2.25, 2.25], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 7.0, 15.0, 5.0, 5.0, 5.0, 5.0, 5.0, 3.75, 3.75, 3.75, 3.75, 3.75, 3.75, 3.75, 3.75, 3.75]}}\\n",\n      "Apache Dubbo\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [1.098901098901099, 1.098901098901099, 2.197802197802198, 3.296703296703297, 4.395604395604396, 5.494505494505495, 6.593406593406594, 7.6923076923076925, 7.6923076923076925, 7.6923076923076925, 8.791208791208792, 9.89010989010989, 9.89010989010989, 10.989010989010987, 10.989010989010987, 12.087912087912088, 12.087912087912088, 12.087912087912088, 13.186813186813188, 13.186813186813188, 13.186813186813188, 13.186813186813188, 14.285714285714285, 14.285714285714285, 15.384615384615383, 16.483516483516482, 16.483516483516482, 16.483516483516482, 16.483516483516482, 16.483516483516482, 17.582417582417584, 18.68131868131868, 18.68131868131868, 18.68131868131868, 19.78021978021978, 20.87912087912088, 20.87912087912088, 20.87912087912088, 21.978021978021975, 21.978021978021975, 23.07692307692308, 24.17582417582417, 25.274725274725277, 25.274725274725277, 26.373626373626376, 26.373626373626376, 27.472527472527474, 27.472527472527474, 28.57142857142857, 28.57142857142857, 28.57142857142857, 28.57142857142857, 29.67032967032967, 30.76923076923077, 30.76923076923077, 31.868131868131865, 31.868131868131865, 32.967032967032964, 32.967032967032964, 32.967032967032964, 32.967032967032964, 32.967032967032964, 34.065934065934066, 34.065934065934066, 35.16483516483517, 36.26373626373626, 36.26373626373626, 36.26373626373626, 37.362637362637365, 38.46153846153847, 38.46153846153847, 38.46153846153847, 39.56043956043956, 39.56043956043956, 40.65934065934066, 41.75824175824176, 42.85714285714285, 43.95604395604396, 45.05494505494506, 45.05494505494506, 45.05494505494506, 45.05494505494506, 45.05494505494506, 45.05494505494506, 46.15384615384615, 47.25274725274725, 48.35164835164835, 49.45054945054945, 50.54945054945055, 50.54945054945055], \'p=0.5\': [2.197802197802198, 3.296703296703297, 4.395604395604396, 5.494505494505495, 5.494505494505495, 6.593406593406594, 7.6923076923076925, 8.791208791208792, 8.791208791208792, 8.791208791208792, 9.89010989010989, 9.89010989010989, 10.989010989010987, 10.989010989010987, 12.087912087912088, 12.087912087912088, 12.087912087912088, 13.186813186813188, 13.186813186813188, 13.186813186813188, 21.978021978021975, 23.07692307692308, 24.17582417582417, 25.274725274725277, 26.373626373626376, 26.373626373626376, 27.472527472527474, 27.472527472527474, 28.57142857142857, 28.57142857142857, 29.67032967032967, 30.76923076923077, 31.868131868131865, 31.868131868131865, 31.868131868131865, 31.868131868131865, 32.967032967032964, 34.065934065934066, 34.065934065934066, 34.065934065934066, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 35.16483516483517, 36.26373626373626, 36.26373626373626, 36.26373626373626, 36.26373626373626, 36.26373626373626, 36.26373626373626, 36.26373626373626, 37.362637362637365, 38.46153846153847, 39.56043956043956, 39.56043956043956, 39.56043956043956, 40.65934065934066, 40.65934065934066, 41.75824175824176, 41.75824175824176, 42.85714285714285, 43.95604395604396, 43.95604395604396, 43.95604395604396, 45.05494505494506, 46.15384615384615, 47.25274725274725, 48.35164835164835, 49.45054945054945, 50.54945054945055, 51.64835164835166, 51.64835164835166, 52.74725274725275, 52.74725274725275, 53.84615384615385, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495, 54.94505494505495], \'p=1\': [2.197802197802198, 3.296703296703297, 4.395604395604396, 5.494505494505495, 6.593406593406594, 6.593406593406594, 7.6923076923076925, 7.6923076923076925, 7.6923076923076925, 7.6923076923076925, 8.791208791208792, 9.89010989010989, 9.89010989010989, 9.89010989010989, 10.989010989010987, 12.087912087912088, 13.186813186813188, 13.186813186813188, 13.186813186813188, 13.186813186813188, 13.186813186813188, 14.285714285714285, 15.384615384615383, 15.384615384615383, 15.384615384615383, 15.384615384615383, 15.384615384615383, 16.483516483516482, 17.582417582417584, 17.582417582417584, 18.68131868131868, 18.68131868131868, 18.68131868131868, 18.68131868131868, 18.68131868131868, 18.68131868131868, 19.78021978021978, 19.78021978021978, 20.87912087912088, 20.87912087912088, 20.87912087912088, 21.978021978021975, 21.978021978021975, 21.978021978021975, 21.978021978021975, 21.978021978021975, 23.07692307692308, 23.07692307692308, 23.07692307692308, 23.07692307692308, 23.07692307692308, 24.17582417582417, 42.85714285714285, 43.95604395604396, 45.05494505494506, 46.15384615384615, 47.25274725274725, 47.25274725274725, 48.35164835164835, 49.45054945054945, 49.45054945054945, 50.54945054945055, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166, 51.64835164835166]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 25.0, 25.0, 25.0, 0.0, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 50.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 33.33333333333333, 0.0, 50.0, 0.0, 0.0, 0.0, 0.0, 25.0, 50.0, 0.0, 25.0, 0.0, 0.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 33.33333333333333, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 33.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 25.0, 0.0, 0.0, 25.0, 0.0, 0.0, 0.0, 33.33333333333333, 25.0, 25.0, 0.0, 0.0, 0.0, 25.0, 33.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.33333333333333, 25.0, 0.0, 0.0, 25.0, 0.0, 25.0, 25.0, 33.33333333333333, 0.0, 33.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 29.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 45.0, 92.0, 92.0, 89.0, 0.0, 0.0, 0.0, 74.0, 0.0, 0.0, 82.0, 0.0, 0.0, 86.0, 0.0, 0.0, 0.0, 32.0, 0.0, 22.0, 0.0, 0.0, 33.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 73.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.0, 0.0, 61.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.0, 0.0, 13.0, 0.0, 8.5, 0.0, 0.0, 0.0, 0.0, 16.0, 9.0, 0.0, 19.0, 0.0, 0.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 71.0, 0.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 0.0, 89.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0, 95.0, 0.0, 94.0, 0.0, 0.0, 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 83.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.5, 71.0, 73.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 28.0, 0.0, 0.0, 0.0, 24.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 29.0, 29.0, 0.0, 0.0, 91.0, 0.0, 0.0, 0.0, 70.0, 90.0, 92.0, 0.0, 0.0, 0.0, 91.0, 74.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 88.0, 95.0, 0.0, 0.0, 95.0, 0.0, 95.0, 83.0, 71.0, 0.0, 74.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}}\\n",\n      "Apache Lucene\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [4.0, 8.0, 12.0, 12.0, 16.0, 16.0, 20.0, 24.0, 28.000000000000004, 28.000000000000004, 32.0, 32.0, 32.0, 32.0, 36.0, 36.0, 40.0, 44.0, 44.0, 44.0, 48.0, 48.0, 52.0, 52.0, 52.0], \'p=0.5\': [4.0, 8.0, 8.0, 8.0, 12.0, 16.0, 20.0, 24.0, 24.0, 28.000000000000004, 32.0, 32.0, 32.0, 32.0, 36.0, 36.0, 40.0, 40.0, 40.0, 44.0, 48.0, 52.0, 52.0, 56.00000000000001, 60.0], \'p=1\': [4.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0, 72.0]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 50.0, 50.0, 50.0, 50.0, 66.66666666666666, 66.66666666666666, 66.66666666666666, 75.0, 75.0, 75.0, 75.0, 75.0, 100.0, 100.0, 75.0, 100.0, 75.0, 100.0, 100.0, 100.0, 100.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 50.0, 50.0, 50.0, 50.0, 66.66666666666666, 66.66666666666666, 66.66666666666666, 75.0, 50.0, 100.0, 100.0, 100.0, 100.0, 100.0, 75.0, 100.0, 100.0, 100.0, 100.0], \'p=1\': [0.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 4.5, 4.5, 4.5, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 1.75, 1.75, 2.6666666666666665, 1.75, 2.6666666666666665, 1.75, 1.75, 1.75, 1.75], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 8.0, 8.0, 8.0, 8.0, 4.5, 4.5, 4.5, 3.333333333333333, 4.0, 1.75, 1.75, 1.75, 1.75, 1.75, 2.6666666666666665, 2.0, 2.0, 2.0, 2.0], \'p=1\': [0.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0]}}\\n",\n      "Presto\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 2.941176470588235, 2.941176470588235, 2.941176470588235, 5.88235294117647, 8.823529411764707, 11.76470588235294, 11.76470588235294, 11.76470588235294, 14.705882352941178, 17.647058823529413, 20.588235294117645, 23.52941176470588, 26.47058823529412, 26.47058823529412, 29.411764705882355, 29.411764705882355, 32.35294117647059, 35.294117647058826, 35.294117647058826, 38.23529411764706, 38.23529411764706, 38.23529411764706, 38.23529411764706, 38.23529411764706, 41.17647058823529, 41.17647058823529, 41.17647058823529, 41.17647058823529], \'p=0.5\': [5.88235294117647, 8.823529411764707, 8.823529411764707, 11.76470588235294, 14.705882352941178, 17.647058823529413, 17.647058823529413, 20.588235294117645, 20.588235294117645, 23.52941176470588, 23.52941176470588, 23.52941176470588, 26.47058823529412, 26.47058823529412, 26.47058823529412, 32.35294117647059, 32.35294117647059, 35.294117647058826, 35.294117647058826, 38.23529411764706, 41.17647058823529, 44.11764705882353, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176, 47.05882352941176], \'p=1\': [2.941176470588235, 2.941176470588235, 2.941176470588235, 2.941176470588235, 5.88235294117647, 5.88235294117647, 5.88235294117647, 5.88235294117647, 8.823529411764707, 8.823529411764707, 8.823529411764707, 11.76470588235294, 11.76470588235294, 14.705882352941178, 17.647058823529413, 20.588235294117645, 23.52941176470588, 23.52941176470588, 26.47058823529412, 26.47058823529412, 26.47058823529412, 29.411764705882355, 29.411764705882355, 29.411764705882355, 29.411764705882355, 29.411764705882355, 32.35294117647059, 35.294117647058826, 38.23529411764706, 41.17647058823529, 41.17647058823529, 41.17647058823529, 41.17647058823529]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 50.0, 50.0, 50.0, 50.0, 33.33333333333333, 75.0, 75.0, 25.0, 50.0, 25.0, 50.0, 25.0, 25.0, 25.0, 33.33333333333333, 25.0, 25.0, 25.0, 50.0, 25.0, 25.0, 25.0, 25.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.0, 50.0, 25.0, 50.0, 25.0, 25.0, 50.0, 25.0, 50.0, 50.0, 75.0, 50.0, 75.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 75.0, 50.0, 50.0, 50.0, 75.0, 75.0, 75.0], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0, 66.66666666666666, 50.0, 50.0, 50.0, 33.33333333333333, 75.0, 75.0, 25.0, 50.0, 25.0, 50.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 50.0]}}\\n",\n      "{\'Heuristic 1 Only\': {\'p=0\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 7.0, 7.0, 7.0, 7.0, 9.0, 3.0, 3.0, 13.0, 5.0, 14.0, 6.5, 14.0, 15.0, 13.0, 11.0, 15.0, 15.0, 14.0, 5.5, 13.0, 14.0, 14.0, 13.0], \'p=0.5\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.0, 4.5, 20.0, 9.5, 19.0, 20.0, 6.5, 14.0, 8.0, 8.0, 4.333333333333333, 7.0, 4.333333333333333, 8.0, 7.5, 8.0, 7.5, 7.5, 7.0, 4.333333333333333, 7.0, 7.0, 7.5, 4.333333333333333, 4.333333333333333, 4.333333333333333], \'p=1\': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 1.0, 7.0, 7.0, 7.0, 9.0, 3.0, 3.0, 13.0, 5.0, 13.0, 5.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 14.0, 13.0, 14.0, 6.0]}}\\n"\n     ]\n    }\n   ],\n   "source": [\n    "print(\\"Alibaba Nacos\\")\\n",\n    "print(accuracy_results_alibaba_nacos)\\n",\n    "print(rule_percentage_results__alibaba_nacos)\\n",\n    "print(conciseness_results__alibaba_nacos)\\n",\n    "\\n",\n    "print(\\"Apache Dubbo\\")\\n",\n    "print(accuracy_results_apache_dubbo)\\n",\n    "print(rule_percentage_results__apache_dubbo)\\n",\n    "print(conciseness_results__apache_dubbo)\\n",\n    "\\n",\n    "print(\\"Apache Lucene\\")\\n",\n    "print(accuracy_results_apache_lucene)\\n",\n    "print(rule_percentage_results__apache_lucene)\\n",\n    "print(conciseness_results__apache_lucene)\\n",\n    "\\n",\n    "print(\\"Presto\\")\\n",\n    "print(accuracy_results_presto)\\n",\n    "print(rule_percentage_results__presto)\\n",\n    "print(conciseness_results__presto)\\n"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": 16,\n   "metadata": {},\n   "outputs": [\n    {\n     "ename": "FileNotFoundError",\n     "evalue": "[Errno 2] No such file or directory: \'plots/alibaba_nacos_Heuristic 1 Only_probability_p=0.png\'",\n     "output_type": "error",\n     "traceback": [\n      "\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m",\n      "\\u001b[0;31mFileNotFoundError\\u001b[0m                         Traceback (most recent call last)",\n      "Input \\u001b[0;32mIn [16]\\u001b[0m, in \\u001b[0;36m<cell line: 2>\\u001b[0;34m()\\u001b[0m\\n\\u001b[1;32m     19\\u001b[0m plt\\u001b[38;5;241m.\\u001b[39mgrid()\\n\\u001b[1;32m     20\\u001b[0m plt\\u001b[38;5;241m.\\u001b[39mtight_layout()\\n\\u001b[0;32m---> 21\\u001b[0m \\u001b[43mplt\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43msavefig\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;124;43mf\\u001b[39;49m\\u001b[38;5;124;43m\'\\u001b[39;49m\\u001b[38;5;124;43mplots/alibaba_nacos_\\u001b[39;49m\\u001b[38;5;132;43;01m{\\u001b[39;49;00m\\u001b[43mscenario\\u001b[49m\\u001b[38;5;132;43;01m}\\u001b[39;49;00m\\u001b[38;5;124;43m_probability_\\u001b[39;49m\\u001b[38;5;132;43;01m{\\u001b[39;49;00m\\u001b[43mprobability\\u001b[49m\\u001b[38;5;132;43;01m}\\u001b[39;49;00m\\u001b[38;5;124;43m.png\\u001b[39;49m\\u001b[38;5;124;43m\'\\u001b[39;49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m     22\\u001b[0m plt\\u001b[38;5;241m.\\u001b[39mshow()\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/pyplot.py:954\\u001b[0m, in \\u001b[0;36msavefig\\u001b[0;34m(*args, **kwargs)\\u001b[0m\\n\\u001b[1;32m    951\\u001b[0m \\u001b[38;5;129m@_copy_docstring_and_deprecators\\u001b[39m(Figure\\u001b[38;5;241m.\\u001b[39msavefig)\\n\\u001b[1;32m    952\\u001b[0m \\u001b[38;5;28;01mdef\\u001b[39;00m \\u001b[38;5;21msavefig\\u001b[39m(\\u001b[38;5;241m*\\u001b[39margs, \\u001b[38;5;241m*\\u001b[39m\\u001b[38;5;241m*\\u001b[39mkwargs):\\n\\u001b[1;32m    953\\u001b[0m     fig \\u001b[38;5;241m=\\u001b[39m gcf()\\n\\u001b[0;32m--> 954\\u001b[0m     res \\u001b[38;5;241m=\\u001b[39m \\u001b[43mfig\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43msavefig\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43margs\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43mkwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m    955\\u001b[0m     fig\\u001b[38;5;241m.\\u001b[39mcanvas\\u001b[38;5;241m.\\u001b[39mdraw_idle()  \\u001b[38;5;66;03m# Need this if \'transparent=True\', to reset colors.\\u001b[39;00m\\n\\u001b[1;32m    956\\u001b[0m     \\u001b[38;5;28;01mreturn\\u001b[39;00m res\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/figure.py:3274\\u001b[0m, in \\u001b[0;36mFigure.savefig\\u001b[0;34m(self, fname, transparent, **kwargs)\\u001b[0m\\n\\u001b[1;32m   3270\\u001b[0m     \\u001b[38;5;28;01mfor\\u001b[39;00m ax \\u001b[38;5;129;01min\\u001b[39;00m \\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39maxes:\\n\\u001b[1;32m   3271\\u001b[0m         stack\\u001b[38;5;241m.\\u001b[39menter_context(\\n\\u001b[1;32m   3272\\u001b[0m             ax\\u001b[38;5;241m.\\u001b[39mpatch\\u001b[38;5;241m.\\u001b[39m_cm_set(facecolor\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;124m\'\\u001b[39m\\u001b[38;5;124mnone\\u001b[39m\\u001b[38;5;124m\'\\u001b[39m, edgecolor\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;124m\'\\u001b[39m\\u001b[38;5;124mnone\\u001b[39m\\u001b[38;5;124m\'\\u001b[39m))\\n\\u001b[0;32m-> 3274\\u001b[0m \\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mcanvas\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mprint_figure\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mfname\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43mkwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backend_bases.py:2338\\u001b[0m, in \\u001b[0;36mFigureCanvasBase.print_figure\\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\\u001b[0m\\n\\u001b[1;32m   2334\\u001b[0m \\u001b[38;5;28;01mtry\\u001b[39;00m:\\n\\u001b[1;32m   2335\\u001b[0m     \\u001b[38;5;66;03m# _get_renderer may change the figure dpi (as vector formats\\u001b[39;00m\\n\\u001b[1;32m   2336\\u001b[0m     \\u001b[38;5;66;03m# force the figure dpi to 72), so we need to set it again here.\\u001b[39;00m\\n\\u001b[1;32m   2337\\u001b[0m     \\u001b[38;5;28;01mwith\\u001b[39;00m cbook\\u001b[38;5;241m.\\u001b[39m_setattr_cm(\\u001b[38;5;28mself\\u001b[39m\\u001b[38;5;241m.\\u001b[39mfigure, dpi\\u001b[38;5;241m=\\u001b[39mdpi):\\n\\u001b[0;32m-> 2338\\u001b[0m         result \\u001b[38;5;241m=\\u001b[39m \\u001b[43mprint_method\\u001b[49m\\u001b[43m(\\u001b[49m\\n\\u001b[1;32m   2339\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[43mfilename\\u001b[49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m   2340\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[43mfacecolor\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43mfacecolor\\u001b[49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m   2341\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[43medgecolor\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43medgecolor\\u001b[49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m   2342\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[43morientation\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43morientation\\u001b[49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m   2343\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[43mbbox_inches_restore\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43m_bbox_inches_restore\\u001b[49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m   2344\\u001b[0m \\u001b[43m            \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43mkwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m   2345\\u001b[0m \\u001b[38;5;28;01mfinally\\u001b[39;00m:\\n\\u001b[1;32m   2346\\u001b[0m     \\u001b[38;5;28;01mif\\u001b[39;00m bbox_inches \\u001b[38;5;129;01mand\\u001b[39;00m restore_bbox:\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backend_bases.py:2204\\u001b[0m, in \\u001b[0;36mFigureCanvasBase._switch_canvas_and_return_print_method.<locals>.<lambda>\\u001b[0;34m(*args, **kwargs)\\u001b[0m\\n\\u001b[1;32m   2200\\u001b[0m     optional_kws \\u001b[38;5;241m=\\u001b[39m {  \\u001b[38;5;66;03m# Passed by print_figure for other renderers.\\u001b[39;00m\\n\\u001b[1;32m   2201\\u001b[0m         \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mdpi\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mfacecolor\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124medgecolor\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124morientation\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m,\\n\\u001b[1;32m   2202\\u001b[0m         \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mbbox_inches_restore\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m}\\n\\u001b[1;32m   2203\\u001b[0m     skip \\u001b[38;5;241m=\\u001b[39m optional_kws \\u001b[38;5;241m-\\u001b[39m {\\u001b[38;5;241m*\\u001b[39minspect\\u001b[38;5;241m.\\u001b[39msignature(meth)\\u001b[38;5;241m.\\u001b[39mparameters}\\n\\u001b[0;32m-> 2204\\u001b[0m     print_method \\u001b[38;5;241m=\\u001b[39m functools\\u001b[38;5;241m.\\u001b[39mwraps(meth)(\\u001b[38;5;28;01mlambda\\u001b[39;00m \\u001b[38;5;241m*\\u001b[39margs, \\u001b[38;5;241m*\\u001b[39m\\u001b[38;5;241m*\\u001b[39mkwargs: \\u001b[43mmeth\\u001b[49m\\u001b[43m(\\u001b[49m\\n\\u001b[1;32m   2205\\u001b[0m \\u001b[43m        \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43margs\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43m{\\u001b[49m\\u001b[43mk\\u001b[49m\\u001b[43m:\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mv\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;28;43;01mfor\\u001b[39;49;00m\\u001b[43m \\u001b[49m\\u001b[43mk\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mv\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;129;43;01min\\u001b[39;49;00m\\u001b[43m \\u001b[49m\\u001b[43mkwargs\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mitems\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43m)\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;28;43;01mif\\u001b[39;49;00m\\u001b[43m \\u001b[49m\\u001b[43mk\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;129;43;01mnot\\u001b[39;49;00m\\u001b[43m \\u001b[49m\\u001b[38;5;129;43;01min\\u001b[39;49;00m\\u001b[43m \\u001b[49m\\u001b[43mskip\\u001b[49m\\u001b[43m}\\u001b[49m\\u001b[43m)\\u001b[49m)\\n\\u001b[1;32m   2206\\u001b[0m \\u001b[38;5;28;01melse\\u001b[39;00m:  \\u001b[38;5;66;03m# Let third-parties do as they see fit.\\u001b[39;00m\\n\\u001b[1;32m   2207\\u001b[0m     print_method \\u001b[38;5;241m=\\u001b[39m meth\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/_api/deprecation.py:410\\u001b[0m, in \\u001b[0;36mdelete_parameter.<locals>.wrapper\\u001b[0;34m(*inner_args, **inner_kwargs)\\u001b[0m\\n\\u001b[1;32m    400\\u001b[0m     deprecation_addendum \\u001b[38;5;241m=\\u001b[39m (\\n\\u001b[1;32m    401\\u001b[0m         \\u001b[38;5;124mf\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mIf any parameter follows \\u001b[39m\\u001b[38;5;132;01m{\\u001b[39;00mname\\u001b[38;5;132;01m!r}\\u001b[39;00m\\u001b[38;5;124m, they should be passed as \\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m\\n\\u001b[1;32m    402\\u001b[0m         \\u001b[38;5;124mf\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mkeyword, not positionally.\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m)\\n\\u001b[1;32m    403\\u001b[0m     warn_deprecated(\\n\\u001b[1;32m    404\\u001b[0m         since,\\n\\u001b[1;32m    405\\u001b[0m         name\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28mrepr\\u001b[39m(name),\\n\\u001b[0;32m   (...)\\u001b[0m\\n\\u001b[1;32m    408\\u001b[0m                  \\u001b[38;5;28;01melse\\u001b[39;00m deprecation_addendum,\\n\\u001b[1;32m    409\\u001b[0m         \\u001b[38;5;241m*\\u001b[39m\\u001b[38;5;241m*\\u001b[39mkwargs)\\n\\u001b[0;32m--> 410\\u001b[0m \\u001b[38;5;28;01mreturn\\u001b[39;00m \\u001b[43mfunc\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43minner_args\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43minner_kwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:517\\u001b[0m, in \\u001b[0;36mFigureCanvasAgg.print_png\\u001b[0;34m(self, filename_or_obj, metadata, pil_kwargs, *args)\\u001b[0m\\n\\u001b[1;32m    468\\u001b[0m \\u001b[38;5;129m@_api\\u001b[39m\\u001b[38;5;241m.\\u001b[39mdelete_parameter(\\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124m3.5\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124margs\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m)\\n\\u001b[1;32m    469\\u001b[0m \\u001b[38;5;28;01mdef\\u001b[39;00m \\u001b[38;5;21mprint_png\\u001b[39m(\\u001b[38;5;28mself\\u001b[39m, filename_or_obj, \\u001b[38;5;241m*\\u001b[39margs,\\n\\u001b[1;32m    470\\u001b[0m               metadata\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m, pil_kwargs\\u001b[38;5;241m=\\u001b[39m\\u001b[38;5;28;01mNone\\u001b[39;00m):\\n\\u001b[1;32m    471\\u001b[0m     \\u001b[38;5;124;03m\\"\\"\\"\\u001b[39;00m\\n\\u001b[1;32m    472\\u001b[0m \\u001b[38;5;124;03m    Write the figure to a PNG file.\\u001b[39;00m\\n\\u001b[1;32m    473\\u001b[0m \\n\\u001b[0;32m   (...)\\u001b[0m\\n\\u001b[1;32m    515\\u001b[0m \\u001b[38;5;124;03m        *metadata*, including the default \'Software\' key.\\u001b[39;00m\\n\\u001b[1;32m    516\\u001b[0m \\u001b[38;5;124;03m    \\"\\"\\"\\u001b[39;00m\\n\\u001b[0;32m--> 517\\u001b[0m     \\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43m_print_pil\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mfilename_or_obj\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[38;5;124;43mpng\\u001b[39;49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mpil_kwargs\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mmetadata\\u001b[49m\\u001b[43m)\\u001b[49m\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backends/backend_agg.py:464\\u001b[0m, in \\u001b[0;36mFigureCanvasAgg._print_pil\\u001b[0;34m(self, filename_or_obj, fmt, pil_kwargs, metadata)\\u001b[0m\\n\\u001b[1;32m    459\\u001b[0m \\u001b[38;5;124;03m\\"\\"\\"\\u001b[39;00m\\n\\u001b[1;32m    460\\u001b[0m \\u001b[38;5;124;03mDraw the canvas, then save it using `.image.imsave` (to which\\u001b[39;00m\\n\\u001b[1;32m    461\\u001b[0m \\u001b[38;5;124;03m*pil_kwargs* and *metadata* are forwarded).\\u001b[39;00m\\n\\u001b[1;32m    462\\u001b[0m \\u001b[38;5;124;03m\\"\\"\\"\\u001b[39;00m\\n\\u001b[1;32m    463\\u001b[0m FigureCanvasAgg\\u001b[38;5;241m.\\u001b[39mdraw(\\u001b[38;5;28mself\\u001b[39m)\\n\\u001b[0;32m--> 464\\u001b[0m \\u001b[43mmpl\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mimage\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mimsave\\u001b[49m\\u001b[43m(\\u001b[49m\\n\\u001b[1;32m    465\\u001b[0m \\u001b[43m    \\u001b[49m\\u001b[43mfilename_or_obj\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mbuffer_rgba\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43m)\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;28;43mformat\\u001b[39;49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43mfmt\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43morigin\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[38;5;124;43mupper\\u001b[39;49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[43m,\\u001b[49m\\n\\u001b[1;32m    466\\u001b[0m \\u001b[43m    \\u001b[49m\\u001b[43mdpi\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[38;5;28;43mself\\u001b[39;49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mfigure\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mdpi\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mmetadata\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43mmetadata\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[43mpil_kwargs\\u001b[49m\\u001b[38;5;241;43m=\\u001b[39;49m\\u001b[43mpil_kwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/image.py:1664\\u001b[0m, in \\u001b[0;36mimsave\\u001b[0;34m(fname, arr, vmin, vmax, cmap, format, origin, dpi, metadata, pil_kwargs)\\u001b[0m\\n\\u001b[1;32m   1662\\u001b[0m pil_kwargs\\u001b[38;5;241m.\\u001b[39msetdefault(\\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mformat\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, \\u001b[38;5;28mformat\\u001b[39m)\\n\\u001b[1;32m   1663\\u001b[0m pil_kwargs\\u001b[38;5;241m.\\u001b[39msetdefault(\\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mdpi\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m, (dpi, dpi))\\n\\u001b[0;32m-> 1664\\u001b[0m \\u001b[43mimage\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43msave\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mfname\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[38;5;241;43m*\\u001b[39;49m\\u001b[43mpil_kwargs\\u001b[49m\\u001b[43m)\\u001b[49m\\n",\n      "File \\u001b[0;32m/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/PIL/Image.py:2350\\u001b[0m, in \\u001b[0;36mImage.save\\u001b[0;34m(self, fp, format, **params)\\u001b[0m\\n\\u001b[1;32m   2348\\u001b[0m         fp \\u001b[38;5;241m=\\u001b[39m builtins\\u001b[38;5;241m.\\u001b[39mopen(filename, \\u001b[38;5;124m\\"\\u001b[39m\\u001b[38;5;124mr+b\\u001b[39m\\u001b[38;5;124m\\"\\u001b[39m)\\n\\u001b[1;32m   2349\\u001b[0m     \\u001b[38;5;28;01melse\\u001b[39;00m:\\n\\u001b[0;32m-> 2350\\u001b[0m         fp \\u001b[38;5;241m=\\u001b[39m \\u001b[43mbuiltins\\u001b[49m\\u001b[38;5;241;43m.\\u001b[39;49m\\u001b[43mopen\\u001b[49m\\u001b[43m(\\u001b[49m\\u001b[43mfilename\\u001b[49m\\u001b[43m,\\u001b[49m\\u001b[43m \\u001b[49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[38;5;124;43mw+b\\u001b[39;49m\\u001b[38;5;124;43m\\"\\u001b[39;49m\\u001b[43m)\\u001b[49m\\n\\u001b[1;32m   2352\\u001b[0m \\u001b[38;5;28;01mtry\\u001b[39;00m:\\n\\u001b[1;32m   2353\\u001b[0m     save_handler(\\u001b[38;5;28mself\\u001b[39m, fp, filename)\\n",\n      "\\u001b[0;31mFileNotFoundError\\u001b[0m: [Errno 2] No such file or directory: \'plots/alibaba_nacos_Heuristic 1 Only_probability_p=0.png\'"\n     ]\n    },\n    {\n     "data": {\n      "image/png": "",\n      "text/plain": [\n       "<Figure size 720x360 with 1 Axes>"\n      ]\n     },\n     "metadata": {\n      "needs_background": "light"\n     },\n     "output_type": "display_data"\n    }\n   ],\n   "source": [\n    "#plotting the results for Alibaba Nacos - all the data (accuracy, rule percentage, conciseness) in one plot together\\n",\n    "for scenario in accuracy_results_alibaba_nacos:\\n",\n    "    for probability in accuracy_results_alibaba_nacos[scenario]:\\n",\n    "        plt.figure(figsize=(10, 5))\\n",\n    "\\n",\n    "        for heuristic in accuracy_results_alibaba_nacos[scenario][probability]:\\n",\n    "            plt.plot(heuristic, color=\'black\', linestyle=\'solid\', marker=\'o\', markersize=3)\\n",\n    "\\n",\n    "        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\\n",\n    "            plt.plot(heuristic, color=\'black\', linestyle=\'dashed\', marker=\'o\', markersize=3)\\n",\n    "\\n",\n    "        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\\n",\n    "            plt.plot(heuristic, color=\'black\', linestyle=\'dotted\', marker=\'o\', markersize=3)\\n",\n    "\\n",\n    "        plt.title(f\'Alibaba Nacos - {scenario} - Probability {probability}\')\\n",\n    "        plt.xlabel(\'Iteration\')\\n",\n    "        plt.ylabel(\'Value\')\\n",\n    "        plt.legend([\'Accuracy\', \'Rule Percentage\', \'Conciseness\'])\\n",\n    "        plt.grid()\\n",\n    "        plt.tight_layout()\\n",\n    "        plt.show()"\n   ]\n  },\n  {\n   "cell_type": "code",\n   "execution_count": null,\n   "metadata": {},\n   "outputs": [],\n   "source": []\n'],time:'2024-09-06T19:26:46.975Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','34','18','34','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:50.730Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','18','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:51.925Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['19','22','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','ut()\n        plt.show()'],time:'2024-09-06T19:26:52.004Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','18','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','\n        plt.tight_layout()\n        plt.show()'],time:'2024-09-06T19:26:52.020Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','17','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',')\n        plt.tight_layout()\n        plt.show()'],time:'2024-09-06T19:26:52.037Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['17','16','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"nd(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.054Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['17','15','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"end(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.071Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['15','13','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"label('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.087Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['12','10','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"  plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.104Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['11','8','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.120Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.137Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','5','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"       plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.153Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','4','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"        plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.169Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['8','2','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"      for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.186Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['7','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.203Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['6','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            plt.plot(heuristic, color='black', linestyle='solid', marker='o', markersize=3)\n\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:52.319Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','34','18','34','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:53.461Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['19','26','19','26','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:54.148Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','18','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:54.563Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','17','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',')\n        plt.tight_layout()\n        plt.show()'],time:'2024-09-06T19:26:54.720Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['16','12','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.737Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['11','2','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"      for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.753Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['6','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            plt.plot(heuristic, color='black', linestyle='solid', marker='o', markersize=3)\n\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.769Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"        plt.figure(figsize=(10, 5))\n\n        for heuristic in accuracy_results_alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='solid', marker='o', markersize=3)\n\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.786Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['2','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"    for probability in accuracy_results_alibaba_nacos[scenario]:\n        plt.figure(figsize=(10, 5))\n\n        for heuristic in accuracy_results_alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='solid', marker='o', markersize=3)\n\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.819Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['1','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"for scenario in accuracy_results_alibaba_nacos:\n    for probability in accuracy_results_alibaba_nacos[scenario]:\n        plt.figure(figsize=(10, 5))\n\n        for heuristic in accuracy_results_alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='solid', marker='o', markersize=3)\n\n        for heuristic in rule_percentage_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dashed', marker='o', markersize=3)\n\n        for heuristic in conciseness_results__alibaba_nacos[scenario][probability]:\n            plt.plot(heuristic, color='black', linestyle='dotted', marker='o', markersize=3)\n\n        plt.title(f'Alibaba Nacos - {scenario} - Probability {probability}')\n        plt.xlabel('Iteration')\n        plt.ylabel('Value')\n        plt.legend(['Accuracy', 'Rule Percentage', 'Conciseness'])\n        plt.grid()\n        plt.tight_layout()\n        plt.show()"],time:'2024-09-06T19:26:54.969Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['1','0','20','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:55.801Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','1','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-06T19:26:55.805Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['1','0','1','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:55.806Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','1','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','#plotting the results for Alibaba Nacos - all the data (accuracy, rule percentage, conciseness) in one plot together\n'],time:'2024-09-06T19:26:56.098Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-06T19:26:59.596Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['89','75','89','75','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:26:59.617Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','34','18','34','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-06T19:27:00.092Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','1','43','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-06T19:28:14.674Z'}]