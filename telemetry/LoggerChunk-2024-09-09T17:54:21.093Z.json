[{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:21.199Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','149','10','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"#plotting the results for Alibaba Nacos\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in accuracy_results_alibaba_nacos.items():\n    for probability, accuracies in probabilities.items():\n        ax.plot(accuracies, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Accuracy')\nplt.title('Alibaba Nacos')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in rule_percentage_results__alibaba_nacos.items():\n    for probability, rule_percentages in probabilities.items():\n        ax.plot(rule_percentages, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Rule Percentage')\nplt.title('Alibaba Nacos')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in conciseness_results__alibaba_nacos.items():\n    for probability, concisenesses in probabilities.items():\n        ax.plot(concisenesses, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Conciseness')\nplt.title('Alibaba Nacos')\nplt.legend()\nplt.show()\n\n#plotting the results for Apache Dubbo\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in accuracy_results_apache_dubbo.items():\n    for probability, accuracies in probabilities.items():\n        ax.plot(accuracies, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Accuracy')\nplt.title('Apache Dubbo')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in rule_percentage_results__apache_dubbo.items():\n    for probability, rule_percentages in probabilities.items():\n        ax.plot(rule_percentages, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Rule Percentage')\nplt.title('Apache Dubbo')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in conciseness_results__apache_dubbo.items():\n    for probability, concisenesses in probabilities.items():\n        ax.plot(concisenesses, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Conciseness')\nplt.title('Apache Dubbo')\nplt.legend()\nplt.show()\n\n#plotting the results for Apache Lucene\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in accuracy_results_apache_lucene.items():\n    for probability, accuracies in probabilities.items():\n        ax.plot(accuracies, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Accuracy')\nplt.title('Apache Lucene')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in rule_percentage_results__apache_lucene.items():\n    for probability, rule_percentages in probabilities.items():\n        ax.plot(rule_percentages, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Rule Percentage')\nplt.title('Apache Lucene')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in conciseness_results__apache_lucene.items():\n    for probability, concisenesses in probabilities.items():\n        ax.plot(concisenesses, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Conciseness')\nplt.title('Apache Lucene')\nplt.legend()\nplt.show()\n\n#plotting the results for Presto\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in accuracy_results_presto.items():\n    for probability, accuracies in probabilities.items():\n        ax.plot(accuracies, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Accuracy')\nplt.title('Presto')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in rule_percentage_results__presto.items():\n    for probability, rule_percentages in probabilities.items():\n        ax.plot(rule_percentages, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Rule Percentage')\nplt.title('Presto')\nplt.legend()\nplt.show()\n\nfig, ax = plt.subplots()\n# use color and texture scheme\nfor scenario, probabilities in conciseness_results__presto.items():\n    for probability, concisenesses in probabilities.items():\n        ax.plot(concisenesses, label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\nplt.grid()\nplt.xlabel('Iteration')\nplt.ylabel('Conciseness')\nplt.title('Presto')\nplt.legend()\nplt.show()"],time:'2024-09-09T17:54:26.032Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-09T17:54:26.132Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','19','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','print("Alibaba Nacos")\nprint(accuracy_results_alibaba_nacos)\nprint(rule_percentage_results__alibaba_nacos)\nprint(conciseness_results__alibaba_nacos)\n\nprint("Apache Dubbo")\nprint(accuracy_results_apache_dubbo)\nprint(rule_percentage_results__apache_dubbo)\nprint(conciseness_results__apache_dubbo)\n\nprint("Apache Lucene")\nprint(accuracy_results_apache_lucene)\nprint(rule_percentage_results__apache_lucene)\nprint(conciseness_results__apache_lucene)\n\nprint("Presto")\nprint(accuracy_results_presto)\nprint(rule_percentage_results__presto)\nprint(conciseness_results__presto)\n'],time:'2024-09-09T17:54:27.283Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:28.203Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['6','10','6','10','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:28.217Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-09T17:54:28.596Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','93','86','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"accuracy_results_apache_lucene = {}\nrule_percentage_results__apache_lucene = {}\nconciseness_results__apache_lucene = {}\n\naccuracy_results_alibaba_nacos = {}\nrule_percentage_results__alibaba_nacos = {}\nconciseness_results__alibaba_nacos = {}\n\naccuracy_results_apache_dubbo = {}\nrule_percentage_results__apache_dubbo = {}\nconciseness_results__apache_dubbo = {}\n\naccuracy_results_presto = {}\nrule_percentage_results__presto = {}\nconciseness_results__presto = {}\n\n\n# Load the results from the CSV files\nfor filename in os.listdir('data'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/{filename}')\n\n        # columns Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            # if file name contains alibaba_nacos\n            if 'alibaba_nacos' in filename:\n                if scenario not in accuracy_results_alibaba_nacos:\n                    accuracy_results_alibaba_nacos[scenario] = {}\n                    rule_percentage_results__alibaba_nacos[scenario] = {}\n                    conciseness_results__alibaba_nacos[scenario] = {}\n\n                if probability not in accuracy_results_alibaba_nacos[scenario]:\n                    accuracy_results_alibaba_nacos[scenario][probability] = []\n                    rule_percentage_results__alibaba_nacos[scenario][probability] = []\n                    conciseness_results__alibaba_nacos[scenario][probability] = []\n\n                accuracy_results_alibaba_nacos[scenario][probability].append(accuracy)\n                rule_percentage_results__alibaba_nacos[scenario][probability].append(rule_percentage)\n                conciseness_results__alibaba_nacos[scenario][probability].append(conciseness)\n            \n            # if file name contains apache_dubbo\n            if 'apache_dubbo' in filename:\n                if scenario not in accuracy_results_apache_dubbo:\n                    accuracy_results_apache_dubbo[scenario] = {}\n                    rule_percentage_results__apache_dubbo[scenario] = {}\n                    conciseness_results__apache_dubbo[scenario] = {}\n\n                if probability not in accuracy_results_apache_dubbo[scenario]:\n                    accuracy_results_apache_dubbo[scenario][probability] = []\n                    rule_percentage_results__apache_dubbo[scenario][probability] = []\n                    conciseness_results__apache_dubbo[scenario][probability] = []\n\n                accuracy_results_apache_dubbo[scenario][probability].append(accuracy)\n                rule_percentage_results__apache_dubbo[scenario][probability].append(rule_percentage)\n                conciseness_results__apache_dubbo[scenario][probability].append(conciseness)\n            \n            # if file name contains apache_lucene\n            if 'apache_lucene' in filename:\n                if scenario not in accuracy_results_apache_lucene:\n                    accuracy_results_apache_lucene[scenario] = {}\n                    rule_percentage_results__apache_lucene[scenario] = {}\n                    conciseness_results__apache_lucene[scenario] = {}\n\n                if probability not in accuracy_results_apache_lucene[scenario]:\n                    accuracy_results_apache_lucene[scenario][probability] = []\n                    rule_percentage_results__apache_lucene[scenario][probability] = []\n                    conciseness_results__apache_lucene[scenario][probability] = []\n\n                accuracy_results_apache_lucene[scenario][probability].append(accuracy)\n                rule_percentage_results__apache_lucene[scenario][probability].append(rule_percentage)\n                conciseness_results__apache_lucene[scenario][probability].append(conciseness)\n\n            # if file name contains presto\n            if 'presto' in filename:\n                if scenario not in accuracy_results_presto:\n                    accuracy_results_presto[scenario] = {}\n                    rule_percentage_results__presto[scenario] = {}\n                    conciseness_results__presto[scenario] = {}\n\n                if probability not in accuracy_results_presto[scenario]:\n                    accuracy_results_presto[scenario][probability] = []\n                    rule_percentage_results__presto[scenario][probability] = []\n                    conciseness_results__presto[scenario][probability] = []\n\n                accuracy_results_presto[scenario][probability].append(accuracy)\n                rule_percentage_results__presto[scenario][probability].append(rule_percentage)\n                conciseness_results__presto[scenario][probability].append(conciseness)"],time:'2024-09-09T17:54:28.622Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:29.522Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['25','36','25','36','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:29.579Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','24','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"import matplotlib.pyplot as plt\nimport pandas as pd\nimport os\n\n# Define the textures for each heuristic\ntexture_scheme = {\n    'Heuristic 1 Only': 'solid',     # Code Length\n    'Heuristic 2 Only': 'dashed',    # Code Similarity\n    'Heuristic 3 Only': 'dotted',   # Same Containment\n    'All Heuristics': 'dashdot'         # Combined\n}\ncolor_scheme = {\n# Define the colors for each p-value\n    'p=0': 'blue',\n    'p=0.5': 'green',\n    'p=1': 'orange'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}"],time:'2024-09-09T17:54:32.557Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','16','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-09T17:54:37.409Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','a'],time:'2024-09-09T17:54:37.528Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','al'],time:'2024-09-09T17:54:37.545Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','19','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','ali'],time:'2024-09-09T17:54:37.561Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','20','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alib'],time:'2024-09-09T17:54:37.578Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','21','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','aliba'],time:'2024-09-09T17:54:37.595Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','22','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibab'],time:'2024-09-09T17:54:37.611Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','23','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba'],time:'2024-09-09T17:54:37.628Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','24','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_'],time:'2024-09-09T17:54:37.695Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','25','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_n'],time:'2024-09-09T17:54:37.728Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','26','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_na'],time:'2024-09-09T17:54:37.879Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','27','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_nac'],time:'2024-09-09T17:54:37.928Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','28','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_naco'],time:'2024-09-09T17:54:37.945Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','16','32','29','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','alibaba_nacos'],time:'2024-09-09T17:54:38.235Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','24','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"import matplotlib.pyplot as plt\nimport pandas as pd\nimport os\n\n# Define the textures for each heuristic\ntexture_scheme = {\n    'Heuristic 1 Only': 'solid',     # Code Length\n    'Heuristic 2 Only': 'dashed',    # Code Similarity\n    'Heuristic 3 Only': 'dotted',   # Same Containment\n    'All Heuristics': 'dashdot'         # Combined\n}\ncolor_scheme = {\n# Define the colors for each p-value\n    'p=0': 'blue',\n    'p=0.5': 'green',\n    'p=1': 'orange'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}"],time:'2024-09-09T17:58:10.370Z'}]