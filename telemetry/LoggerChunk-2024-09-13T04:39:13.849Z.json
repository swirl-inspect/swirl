[{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['72','46','72','46','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:25.240Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','62','208','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:25.530Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:25.561Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['14','22','14','22','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:25.563Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['1','53','1','53','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:25.673Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['44','35','44','35','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:25.926Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['12','14','12','14','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:27.538Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['4','32','4','32','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:27.612Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['6','51','6','51','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:27.700Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['38','0','38','97','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','                        accuracy_results[current_dataset][scenario][probability].append(accuracy)'],time:'2024-09-13T04:39:27.798Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','24','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"import matplotlib.pyplot as plt\nimport pandas as pd\nimport os\n\n# Define the textures for each heuristic\ntexture_scheme = {\n    'Heuristic 1 Only': 'solid',     # Code Length\n    'Heuristic 2 Only': 'dashed',    # Code Similarity\n    'Heuristic 3 Only': 'dotted',    # Same Containment\n    'All Heuristics': 'dashdot'      # Combined\n}\ncolor_scheme = {\n    # Define the colors for each p-value\n    'p=0': 'blue',\n    'p=0.5': 'green',\n    'p=1': 'orange'\n}\n\n# Updated heuristic names\nheuristic_names = {\n    'Heuristic 1 Only': 'Code Length',\n    'Heuristic 2 Only': 'Code Similarity',\n    'Heuristic 3 Only': 'Same Containment',\n    'All Heuristics': 'Combined'\n}"],time:'2024-09-13T04:39:27.866Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:29.049Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['2','9','2','9','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:29.054Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['2','9','2','9','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','\n'],time:'2024-09-13T04:39:29.570Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','24','32','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:29.571Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','0','3','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:29.572Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','25','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:29.573Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','0','3','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','i'],time:'2024-09-13T04:39:30.213Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','1','3','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:30.215Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','1','3','1','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','m'],time:'2024-09-13T04:39:30.399Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','2','3','2','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:30.402Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','2','3','2','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','p'],time:'2024-09-13T04:39:30.566Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','3','3','3','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:30.569Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','3','3','3','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','o'],time:'2024-09-13T04:39:30.808Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','4','3','4','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:30.812Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','0','3','4','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','import'],time:'2024-09-13T04:39:31.710Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','6','3','6','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:31.712Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['3','0','3','6','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','import numpy as np'],time:'2024-09-13T04:39:32.041Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['3','18','3','18','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:32.042Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:32.698Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','152','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# plot the same graphs above for data/ground_truth/alibaba_nacos_h=1.csv, alibaba_nacos_h=2.csv, alibaba_nacos_h=3.csv, alibaba_nacos_h=4.csv\n# The x-axis should be the iteration number\n# The y-axis should be the average values of rule percentage, and conciseness at each iteration\n\n# Load the ground truth results from the CSV files\nground_truth_results_h_1 = {}\nground_truth_results_h_2 = {}\nground_truth_results_h_3 = {}\nground_truth_results_h_4 = {}\n\nfor dirname in os.listdir('data/ground_truth'):\n    if dirname.isdigit():\n        for filename in os.listdir(f'data/ground_truth/{dirname}'):\n            if filename.endswith('.csv'):\n                df = pd.read_csv(f'data/ground_truth/{dirname}/{filename}')\n\n                # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n                for index, row in df.iterrows():\n                    scenario = row['Scenario']\n                    probability = row['Probability']\n                    iteration = row['Iteration']\n                    accuracy = row['Accuracy']\n                    rule_percentage = row['Rule Percentage']\n                    conciseness = row['Conciseness']\n\n                    if dirname == '1':\n                        if scenario not in ground_truth_results_h_1:\n                            ground_truth_results_h_1[scenario] = {}\n                        if probability not in ground_truth_results_h_1[scenario]:\n                            ground_truth_results_h_1[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_1[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_1[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '2':\n                        if scenario not in ground_truth_results_h_2:\n                            ground_truth_results_h_2[scenario] = {}\n                        if probability not in ground_truth_results_h_2[scenario]:\n                            ground_truth_results_h_2[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_2[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_2[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '3':\n                        if scenario not in ground_truth_results_h_3:\n                            ground_truth_results_h_3[scenario] = {}\n                        if probability not in ground_truth_results_h_3[scenario]:\n                            ground_truth_results_h_3[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_3[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_3[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '4':\n                        if scenario not in ground_truth_results_h_4:\n                            ground_truth_results_h_4[scenario] = {}\n                        if probability not in ground_truth_results_h_4[scenario]:\n                            ground_truth_results_h_4[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_4[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_4[scenario][probability]['Conciseness'].append(conciseness)\n\n# filter the data only for p=0.5\nground_truth_results_h_1_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_1.items()}\nground_truth_results_h_2_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_2.items()}\nground_truth_results_h_3_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_3.items()}\nground_truth_results_h_4_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_4.items()}\n\n# Calculate the average values for each iteration\nground_truth_results_h_1_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_1_filtered.items()}\nground_truth_results_h_2_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_2_filtered.items()}\nground_truth_results_h_3_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_3_filtered.items()}\nground_truth_results_h_4_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_4_filtered.items()}\n\n# Plotting for ground truth results\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Rule Percentage\nfor scenario, probabilities in ground_truth_results_h_1_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_2_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_3_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in ground_truth_results_h_1_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_2_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_3_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\n\nfig.suptitle('Ground Truth Results for Alibaba Nacos (h=1, 2, 3, 4)', fontsize=16, y=0.92)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n\n# Save the figure as PDF\nfig.savefig('ground_truth_results.pdf')\n\n# 1x3 plots for all programs at h=4 for all probabilities\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Rule Percentage\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\n\nfig.suptitle('Ground Truth Results for Alibaba Nacos (h=4)', fontsize=16, y=0.92)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\nfig.savefig('ground_truth_results_h=4.pdf')\n"],time:'2024-09-13T04:39:32.706Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','149','38','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:32.715Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','152','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:32.716Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:32.722Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','149','38','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:32.728Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','152','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:32.728Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['72','46','72','46','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:32.738Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['72','46','72','46','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:37.801Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-13T04:39:37.914Z'},{src:'onDidChangeActiveTextEditor',msg:'Current editor: [%s]; Previous editor: [%s]',prm:['/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:38.521Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','152','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# plot the same graphs above for data/ground_truth/alibaba_nacos_h=1.csv, alibaba_nacos_h=2.csv, alibaba_nacos_h=3.csv, alibaba_nacos_h=4.csv\n# The x-axis should be the iteration number\n# The y-axis should be the average values of rule percentage, and conciseness at each iteration\n\n# Load the ground truth results from the CSV files\nground_truth_results_h_1 = {}\nground_truth_results_h_2 = {}\nground_truth_results_h_3 = {}\nground_truth_results_h_4 = {}\n\nfor dirname in os.listdir('data/ground_truth'):\n    if dirname.isdigit():\n        for filename in os.listdir(f'data/ground_truth/{dirname}'):\n            if filename.endswith('.csv'):\n                df = pd.read_csv(f'data/ground_truth/{dirname}/{filename}')\n\n                # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n                for index, row in df.iterrows():\n                    scenario = row['Scenario']\n                    probability = row['Probability']\n                    iteration = row['Iteration']\n                    accuracy = row['Accuracy']\n                    rule_percentage = row['Rule Percentage']\n                    conciseness = row['Conciseness']\n\n                    if dirname == '1':\n                        if scenario not in ground_truth_results_h_1:\n                            ground_truth_results_h_1[scenario] = {}\n                        if probability not in ground_truth_results_h_1[scenario]:\n                            ground_truth_results_h_1[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_1[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_1[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '2':\n                        if scenario not in ground_truth_results_h_2:\n                            ground_truth_results_h_2[scenario] = {}\n                        if probability not in ground_truth_results_h_2[scenario]:\n                            ground_truth_results_h_2[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_2[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_2[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '3':\n                        if scenario not in ground_truth_results_h_3:\n                            ground_truth_results_h_3[scenario] = {}\n                        if probability not in ground_truth_results_h_3[scenario]:\n                            ground_truth_results_h_3[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_3[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_3[scenario][probability]['Conciseness'].append(conciseness)\n                    elif dirname == '4':\n                        if scenario not in ground_truth_results_h_4:\n                            ground_truth_results_h_4[scenario] = {}\n                        if probability not in ground_truth_results_h_4[scenario]:\n                            ground_truth_results_h_4[scenario][probability] = {'Rule Percentage': [], 'Conciseness': []}\n\n                        ground_truth_results_h_4[scenario][probability]['Rule Percentage'].append(rule_percentage)\n                        ground_truth_results_h_4[scenario][probability]['Conciseness'].append(conciseness)\n\n# filter the data only for p=0.5\nground_truth_results_h_1_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_1.items()}\nground_truth_results_h_2_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_2.items()}\nground_truth_results_h_3_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_3.items()}\nground_truth_results_h_4_filtered = {scenario: {probability: values for probability, values in probabilities.items() if probability == 'p=0.5'} for scenario, probabilities in ground_truth_results_h_4.items()}\n\n# Calculate the average values for each iteration\nground_truth_results_h_1_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_1_filtered.items()}\nground_truth_results_h_2_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_2_filtered.items()}\nground_truth_results_h_3_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_3_filtered.items()}\nground_truth_results_h_4_avg = {scenario: {probability: {'Rule Percentage': np.mean(values['Rule Percentage']), 'Conciseness': np.mean(values['Conciseness'])} for probability, values in probabilities.items()} for scenario, probabilities in ground_truth_results_h_4_filtered.items()}\n\n# Plotting for ground truth results\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Rule Percentage\nfor scenario, probabilities in ground_truth_results_h_1_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_2_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_3_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in ground_truth_results_h_1_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_2_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_3_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\n\nfig.suptitle('Ground Truth Results for Alibaba Nacos (h=1, 2, 3, 4)', fontsize=16, y=0.92)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n\n# Save the figure as PDF\nfig.savefig('ground_truth_results.pdf')\n\n# 1x3 plots for all programs at h=4 for all probabilities\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Rule Percentage\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[0].plot(values['Rule Percentage'], label=f'{scenario} - {probability}')\n\n# Conciseness\nfor scenario, probabilities in ground_truth_results_h_4_avg.items():\n    for probability, values in probabilities.items():\n        axs[1].plot(values['Conciseness'], label=f'{scenario} - {probability}')\n\nfor ax, metric_name in zip(axs, ['Rule Percentage', 'Conciseness']):\n    ax.grid()\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel(metric_name)\n    ax.legend()\n\n# Add \"%\" to y-axis labels\naxs[0].set_ylabel('Rule Percentage (%)')\n\nfig.suptitle('Ground Truth Results for Alibaba Nacos (h=4)', fontsize=16, y=0.92)\n\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\nfig.savefig('ground_truth_results_h=4.pdf')\n"],time:'2024-09-13T04:39:38.523Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['5','14','5','14','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:39.410Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','29','40','29','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:43.615Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','29','40','29','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-13T04:39:50.885Z'}]