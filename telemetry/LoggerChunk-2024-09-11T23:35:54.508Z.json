[{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','96','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# Initialize dictionaries to store results by iteration for each heuristic\nalibaba_nacos_accuracy_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_rule_percentage_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_conciseness_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\n\n# Load the results from each run and accumulate by iteration\nfor run in range(1, 11):\n    run_dir = f'data/{run}/'  # Assuming the data for each run is in 'code/data/1', 'code/data/2', etc.\n\n    for filename in os.listdir(run_dir):\n        if filename.endswith('.csv') and 'alibaba_nacos' in filename:\n            df = pd.read_csv(os.path.join(run_dir, filename))\n\n            # Parse the file and accumulate results by iteration\n            for index, row in df.iterrows():\n                scenario = row['Scenario']\n                probability = row['Probability']\n                iteration = row['Iteration']\n                accuracy = row['Accuracy']\n                rule_percentage = row['Rule Percentage']\n                conciseness = row['Conciseness']\n\n                for i in heuristics_range:\n                    current_dataset = f'alibaba_nacos_h={i}'\n                    if current_dataset in filename:\n                        # Initialize the dictionary for each iteration\n                        if iteration not in alibaba_nacos_accuracy_by_iteration[current_dataset]:\n                            alibaba_nacos_accuracy_by_iteration[current_dataset][iteration] = {}\n                            alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration] = {}\n                            alibaba_nacos_conciseness_by_iteration[current_dataset][iteration] = {}\n\n                        if scenario not in alibaba_nacos_accuracy_by_iteration[current_dataset][iteration]:\n                            alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario] = []\n                            alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario] = []\n                            alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario] = []\n\n                        # Accumulate values by iteration\n                        alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario].append(accuracy)\n                        alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario].append(rule_percentage)\n                        alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario].append(conciseness)\n\n# Calculate the average across runs for each iteration\nalibaba_nacos_accuracy_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_rule_percentage_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_conciseness_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\n\nfor current_dataset in alibaba_nacos_accuracy_by_iteration:\n    for iteration in alibaba_nacos_accuracy_by_iteration[current_dataset]:\n        alibaba_nacos_accuracy_avg_by_iteration[current_dataset][iteration] = {}\n        alibaba_nacos_rule_percentage_avg_by_iteration[current_dataset][iteration] = {}\n        alibaba_nacos_conciseness_avg_by_iteration[current_dataset][iteration] = {}\n\n        for scenario in alibaba_nacos_accuracy_by_iteration[current_dataset][iteration]:\n            # Compute the average for each scenario at this iteration\n            alibaba_nacos_accuracy_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario])\n            alibaba_nacos_rule_percentage_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario])\n            alibaba_nacos_conciseness_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario])\n\n# Plot the averages for each heuristic by iteration\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy plot\nfor scenario, iterations in alibaba_nacos_accuracy_avg_by_iteration['alibaba_nacos_h=1'].items():  # Example for h=1\n    iterations_list = sorted(iterations.keys())\n    accuracy_list = [iterations[iteration] for iteration in iterations_list]\n    axs[0].plot(iterations_list, accuracy_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[0].set_title('Accuracy (alibaba_nacos_h=1)')\naxs[0].set_xlabel('Iteration')\naxs[0].set_ylabel('Average Accuracy')\naxs[0].legend()\n\n# Rule Percentage plot\nfor scenario, iterations in alibaba_nacos_rule_percentage_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    rule_percentage_list = [iterations[iteration] for iteration in iterations_list]\n    axs[1].plot(iterations_list, rule_percentage_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[1].set_title('Rule Percentage (alibaba_nacos_h=1)')\naxs[1].set_xlabel('Iteration')\naxs[1].set_ylabel('Average Rule Percentage')\naxs[1].legend()\n\n# Conciseness plot\nfor scenario, iterations in alibaba_nacos_conciseness_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    conciseness_list = [iterations[iteration] for iteration in iterations_list]\n    axs[2].plot(iterations_list, conciseness_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[2].set_title('Conciseness (alibaba_nacos_h=1)')\naxs[2].set_xlabel('Iteration')\naxs[2].set_ylabel('Average Conciseness')\naxs[2].legend()\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-11T23:35:55.409Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','0','96','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# Plot the averages for each heuristic by iteration\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy plot\nfor scenario, iterations in alibaba_nacos_accuracy_avg_by_iteration['alibaba_nacos_h=1'].items():  # Example for h=1\n    iterations_list = sorted(iterations.keys())\n    accuracy_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    # Use a default linestyle if the scenario isn't in the texture_scheme dictionary\n    linestyle = texture_scheme.get(scenario, 'solid')  # 'solid' as a fallback if the key is missing\n    axs[0].plot(iterations_list, accuracy_list, label=scenario, linestyle=linestyle)\n    \naxs[0].set_title('Accuracy (alibaba_nacos_h=1)')\naxs[0].set_xlabel('Iteration')\naxs[0].set_ylabel('Average Accuracy')\naxs[0].legend()\n\n# Rule Percentage plot\nfor scenario, iterations in alibaba_nacos_rule_percentage_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    rule_percentage_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    linestyle = texture_scheme.get(scenario, 'solid')  # Fallback if key is missing\n    axs[1].plot(iterations_list, rule_percentage_list, label=scenario, linestyle=linestyle)\n\naxs[1].set_title('Rule Percentage (alibaba_nacos_h=1)')\naxs[1].set_xlabel('Iteration')\naxs[1].set_ylabel('Average Rule Percentage')\naxs[1].legend()\n\n# Conciseness plot\nfor scenario, iterations in alibaba_nacos_conciseness_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    conciseness_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    linestyle = texture_scheme.get(scenario, 'solid')  # Fallback if key is missing\n    axs[2].plot(iterations_list, conciseness_list, label=scenario, linestyle=linestyle)\n\naxs[2].set_title('Conciseness (alibaba_nacos_h=1)')\naxs[2].set_xlabel('Iteration')\naxs[2].set_ylabel('Average Conciseness')\naxs[2].legend()\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-11T23:35:55.775Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','54','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-11T23:35:55.776Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['54','0','54','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:35:55.782Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','38','40','38','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:35:55.785Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','38','40','38','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:05.403Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','63','29','63','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:07.863Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','22','20','22','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:10.999Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['20','22','20','22','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','a'],time:'2024-09-11T23:36:11.510Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','23','20','23','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:11.513Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','54','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# Plot the averages for each heuristic by iteration\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy plot\nfor scenario, iterations in alibaba_nacos_accuracy_avg_by_iteration['alibaba_nacos_h=1'].items():  # Example for h=1\n    iterations_list = sorted(iterations.keys())\n    accuracy_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    # Use a default linestyle if the scenario isn't in the texture_scheme dictionary\n    linestyle = texture_scheme.get(scenario, 'solid')  # 'solid' as a fallback if the key is missing\n    axs[0].plot(iterations_list, accuracy_list, label=scenario, linestyle=linestyle)\n    \naxs[0].set_title('Accuracy (alibaba_nacos_h=1)')\naxs[0].set_xlabel('Iteration')\naxs[0].set_ylabel('Average Accuracy')\naxs[0].legend()\n\n# Rule Percentage plota\nfor scenario, iterations in alibaba_nacos_rule_percentage_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    rule_percentage_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    linestyle = texture_scheme.get(scenario, 'solid')  # Fallback if key is missing\n    axs[1].plot(iterations_list, rule_percentage_list, label=scenario, linestyle=linestyle)\n\naxs[1].set_title('Rule Percentage (alibaba_nacos_h=1)')\naxs[1].set_xlabel('Iteration')\naxs[1].set_ylabel('Average Rule Percentage')\naxs[1].legend()\n\n# Conciseness plot\nfor scenario, iterations in alibaba_nacos_conciseness_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    conciseness_list = [iterations[iteration] for iteration in iterations_list]\n\n    # Print the scenario for debugging purposes\n    print(f\"Plotting scenario: {scenario}\")\n    \n    linestyle = texture_scheme.get(scenario, 'solid')  # Fallback if key is missing\n    axs[2].plot(iterations_list, conciseness_list, label=scenario, linestyle=linestyle)\n\naxs[2].set_title('Conciseness (alibaba_nacos_h=1)')\naxs[2].set_xlabel('Iteration')\naxs[2].set_ylabel('Average Conciseness')\naxs[2].legend()\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-11T23:36:13.008Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','0','54','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:13.353Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','0','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-11T23:36:13.354Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['0','0','0','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:13.360Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','63','29','63','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-11T23:36:13.364Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['0','0','0','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# Initialize dictionaries to store results by iteration for each heuristic\nalibaba_nacos_accuracy_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_rule_percentage_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_conciseness_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\n\n# Load the results from each run and accumulate by iteration\nfor run in range(1, 11):\n    run_dir = f'code/data/{run}/'  # Assuming the data for each run is in 'code/data/1', 'code/data/2', etc.\n\n    for filename in os.listdir(run_dir):\n        if filename.endswith('.csv') and 'alibaba_nacos' in filename:\n            df = pd.read_csv(os.path.join(run_dir, filename))\n\n            # Parse the file and accumulate results by iteration\n            for index, row in df.iterrows():\n                scenario = row['Scenario']\n                probability = row['Probability']\n                iteration = row['Iteration']\n                accuracy = row['Accuracy']\n                rule_percentage = row['Rule Percentage']\n                conciseness = row['Conciseness']\n\n                for i in heuristics_range:\n                    current_dataset = f'alibaba_nacos_h={i}'\n                    if current_dataset in filename:\n                        # Initialize the dictionary for each iteration\n                        if iteration not in alibaba_nacos_accuracy_by_iteration[current_dataset]:\n                            alibaba_nacos_accuracy_by_iteration[current_dataset][iteration] = {}\n                            alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration] = {}\n                            alibaba_nacos_conciseness_by_iteration[current_dataset][iteration] = {}\n\n                        if scenario not in alibaba_nacos_accuracy_by_iteration[current_dataset][iteration]:\n                            alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario] = []\n                            alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario] = []\n                            alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario] = []\n\n                        # Accumulate values by iteration\n                        alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario].append(accuracy)\n                        alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario].append(rule_percentage)\n                        alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario].append(conciseness)\n\n# Calculate the average across runs for each iteration\nalibaba_nacos_accuracy_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_rule_percentage_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\nalibaba_nacos_conciseness_avg_by_iteration = {f'alibaba_nacos_h={i}': {} for i in heuristics_range}\n\nfor current_dataset in alibaba_nacos_accuracy_by_iteration:\n    for iteration in alibaba_nacos_accuracy_by_iteration[current_dataset]:\n        alibaba_nacos_accuracy_avg_by_iteration[current_dataset][iteration] = {}\n        alibaba_nacos_rule_percentage_avg_by_iteration[current_dataset][iteration] = {}\n        alibaba_nacos_conciseness_avg_by_iteration[current_dataset][iteration] = {}\n\n        for scenario in alibaba_nacos_accuracy_by_iteration[current_dataset][iteration]:\n            # Compute the average for each scenario at this iteration\n            alibaba_nacos_accuracy_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_accuracy_by_iteration[current_dataset][iteration][scenario])\n            alibaba_nacos_rule_percentage_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_rule_percentage_by_iteration[current_dataset][iteration][scenario])\n            alibaba_nacos_conciseness_avg_by_iteration[current_dataset][iteration][scenario] = \\\n                sum(alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario]) / len(alibaba_nacos_conciseness_by_iteration[current_dataset][iteration][scenario])\n\n# Plot the averages for each heuristic by iteration\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy plot\nfor scenario, iterations in alibaba_nacos_accuracy_avg_by_iteration['alibaba_nacos_h=1'].items():  # Example for h=1\n    iterations_list = sorted(iterations.keys())\n    accuracy_list = [iterations[iteration] for iteration in iterations_list]\n    axs[0].plot(iterations_list, accuracy_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[0].set_title('Accuracy (alibaba_nacos_h=1)')\naxs[0].set_xlabel('Iteration')\naxs[0].set_ylabel('Average Accuracy')\naxs[0].legend()\n\n# Rule Percentage plot\nfor scenario, iterations in alibaba_nacos_rule_percentage_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    rule_percentage_list = [iterations[iteration] for iteration in iterations_list]\n    axs[1].plot(iterations_list, rule_percentage_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[1].set_title('Rule Percentage (alibaba_nacos_h=1)')\naxs[1].set_xlabel('Iteration')\naxs[1].set_ylabel('Average Rule Percentage')\naxs[1].legend()\n\n# Conciseness plot\nfor scenario, iterations in alibaba_nacos_conciseness_avg_by_iteration['alibaba_nacos_h=1'].items():\n    iterations_list = sorted(iterations.keys())\n    conciseness_list = [iterations[iteration] for iteration in iterations_list]\n    axs[2].plot(iterations_list, conciseness_list, label=scenario, linestyle=texture_scheme[scenario])\naxs[2].set_title('Conciseness (alibaba_nacos_h=1)')\naxs[2].set_xlabel('Iteration')\naxs[2].set_ylabel('Average Conciseness')\naxs[2].legend()\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-11T23:36:31.704Z'}]