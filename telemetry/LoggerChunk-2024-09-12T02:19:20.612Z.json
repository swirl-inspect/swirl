[{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','31','40','47','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','averaged_results'],time:'2024-09-12T02:19:20.761Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['68','17','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:42.217Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['68','16','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','('],time:'2024-09-12T02:19:42.264Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['68','17','69','10','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',')\nplt.show()'],time:'2024-09-12T02:19:42.280Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['68','16','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','('],time:'2024-09-12T02:19:42.382Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['67','0','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','\nplt.tight_layout('],time:'2024-09-12T02:19:42.398Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['66','16','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"l('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.414Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['65','15','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"e('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.431Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['65','14','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"le('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.582Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['64','13','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.598Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['62','14','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.631Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['61','13','68','17','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"obability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout("],time:'2024-09-12T02:19:42.647Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['70','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:43.094Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['69','10','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','\n'],time:'2024-09-12T02:19:43.215Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['67','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','\nplt.tight_layout()\nplt.show()\n'],time:'2024-09-12T02:19:43.230Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['66','11','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.247Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['65','10','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.264Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['64','8','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"rid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.280Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['61','6','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"  if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.297Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['58','3','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"onciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.314Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['56','2','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.331Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['54','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"xs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.347Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['53','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"           axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.363Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['52','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"       if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.380Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['51','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.396Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['50','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"for scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.413Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['49','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.429Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['48','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.447Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['47','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"axs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.463Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['46','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"axs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.480Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['45','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"axs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.496Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['44','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.531Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['43','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:43.613Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['45','13','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.281Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['48','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.297Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['49','17','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.313Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['50','25','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"es in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.363Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['50','26','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.380Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['50','27','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.414Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['42','27','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',", values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.539Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['42','26','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.547Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['43','26','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.580Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['44','27','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"ues['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.696Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['45','13','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.713Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['37','27','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.730Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['37','28','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',", figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.746Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['38','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.780Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['39','10','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.847Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','27','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.930Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['40','26','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.946Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['41','26','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"s in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:44.997Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['41','25','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"es in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.013Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['34','24','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"ults[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.080Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['35','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.163Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['27','24','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"uracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.179Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['27','23','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"curacy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.280Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['28','23','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"le Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.313Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['28','22','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"ule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.330Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['28','21','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.346Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['28','20','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.381Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','19','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," 'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.396Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','17','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"   'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.413Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','14','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"      'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.429Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['30','10','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"      }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.447Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['31','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.463Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.512Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['33','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.763Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['32','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.897Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['31','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.930Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['28','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.945Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['25','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.963Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['24','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:45.979Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['23','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.013Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['22','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.080Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['21','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.130Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['20','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.146Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['19','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.163Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['18','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.214Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['17','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.263Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"averaged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.330Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"or filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.463Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','2','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"r filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.480Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['11','3','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.496Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['29','63','29','63','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:46.532Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['5','5','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," x-axis should be the iteration number\n# The y-axis should be the averaged values of accuracy, rule percentage, and conciseness at that iteration\n\n# Load the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.553Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['5','6','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"x-axis should be the iteration number\n# The y-axis should be the averaged values of accuracy, rule percentage, and conciseness at that iteration\n\n# Load the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.565Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['6','6','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"y-axis should be the averaged values of accuracy, rule percentage, and conciseness at that iteration\n\n# Load the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.580Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['7','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"\n# Load the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.663Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['8','6','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'," the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.697Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['8','5','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"d the averaged results from the CSV files\naveraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.914Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','4','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"aged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.930Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','3','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"raged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.947Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','2','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"eraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:46.963Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"veraged_results = {}\nfor filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:47.046Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','1','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"or filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:47.081Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',"for filename in os.listdir('data/avg'):\n    if filename.endswith('.csv'):\n        df = pd.read_csv(f'data/avg/{filename}')\n\n        # columns: Scenario,Probability,Iteration,Accuracy,Rule Percentage,Conciseness\n        for index, row in df.iterrows():\n            scenario = row['Scenario']\n            probability = row['Probability']\n            iteration = row['Iteration']\n            accuracy = row['Accuracy']\n            rule_percentage = row['Rule Percentage']\n            conciseness = row['Conciseness']\n\n            if scenario not in averaged_results:\n                averaged_results[scenario] = {}\n            if probability not in averaged_results[scenario]:\n                averaged_results[scenario][probability] = {\n                    'Accuracy': [],\n                    'Rule Percentage': [],\n                    'Conciseness': []\n                }\n\n            averaged_results[scenario][probability]['Accuracy'].append(accuracy)\n            averaged_results[scenario][probability]['Rule Percentage'].append(rule_percentage)\n            averaged_results[scenario][probability]['Conciseness'].append(conciseness)\n\n# Plotting for averaged results\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Accuracy\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        print(probabilities, values)\n        if probability == 'p=0.5':\n            axs[0].plot(values['Accuracy'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[0].grid()\naxs[0].set_title('Alibaba Nacos - Accuracy')\naxs[0].set_xlabel('Iteration')\n\n# Rule Percentage\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[1].plot(values['Rule Percentage'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\naxs[1].grid()\naxs[1].set_title('Alibaba Nacos - Rule Percentage')\naxs[1].set_xlabel('Iteration')\n\n# Conciseness\nfor scenario, probabilities in averaged_results.items():\n    for probability, values in probabilities.items():\n        if probability == 'p=0.5':\n            axs[2].plot(values['Conciseness'], label=f'{scenario} - {probability}', color=color_scheme[probability], linestyle=texture_scheme[scenario])\n\naxs[2].grid()\naxs[2].set_title('Alibaba Nacos - Conciseness')\naxs[2].set_xlabel('Iteration')\n\nplt.tight_layout()\nplt.show()\n"],time:'2024-09-12T02:19:48.465Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['10','0','70','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:49.252Z'},{src:'onDidChangeTextEditorVisibleRanges',msg:'%s:%s to %s:%s [%s]',prm:['0','0','10','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb'],time:'2024-09-12T02:19:49.256Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['10','0','10','0','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:49.259Z'},{src:'onDidChangeTextEditorSelection',msg:'%s:%s to %s:%s in [%s] text: %s',prm:['9','16','9','16','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb',''],time:'2024-09-12T02:19:50.362Z'},{src:'onDidChangeTextDocument',msg:'%s:%s to %s:%s in [%s] replaced with: %s`',prm:['9','16','9','16','/Users/burakyetistiren/Desktop/warning_suppression/code/plot.ipynb','_'],time:'2024-09-12T02:19:51.484Z'}]